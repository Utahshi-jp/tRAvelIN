/* ==============================
   基本スタイル（ルート要素）
   画面幅に応じて文字サイズが変わるレスポンシブな設定
============================== */
html {
    font-size: 1.5vw; 
    /* 画面幅の1.5%を基準にフォントサイズを設定。
       vw単位はビューポートの幅に応じて変動するため、
       小さい画面では文字が小さく、大きい画面では文字が大きくなる。 */
}

/* ==============================
   bodyの基本スタイル
============================== */
body {
    font-family: Arial, sans-serif; 
    /* フォントはArialを優先し、無ければサンセリフ体を使用 */
    background-color: #f9f9f9; 
    /* 背景色を非常に薄い灰色に設定 */
    padding: 0; 
    /* ブラウザデフォルトの余白をリセット（上下左右0） */
    margin: 0;
    font-size: 1rem; 
    /* body要素の基本フォントサイズ。
       1remはhtmlで指定した1.5vwを基準に計算されるので、
       結果的にビューポート依存のフォントサイズとなる */
}

/* ==============================
   ヘッダー全体のスタイル
============================== */
.header {
    display: flex; 
    /* フレックスボックスを利用し、子要素の配置を制御 */
    flex-direction: column; 
    /* 子要素を縦方向に配置 */
    justify-content: center; 
    /* コンテナ内で垂直方向に中央寄せ */
    align-items: center; 
    /* コンテナ内で水平方向に中央寄せ */
    margin-bottom: 10px;
    background-color: #ffa9a9; 
    /* 背景色を淡いピンク系のカラーに設定 */
}

/* ==============================
   ロゴ画像のスタイル
============================== */
.logo {
    max-width: 650px; 
    /* 画像の最大幅を650pxに制限 */
    width: 100%; 
    /* 親要素の幅いっぱいに広げる。max-widthでこれ以上大きくはならない */
    height: auto; 
    /* アスペクト比を保ったまま高さを自動調整 */
    margin-top: 20px; 
    /* 上に余白を追加 */
}

/* ==============================
   ヘッダー内のナビゲーションバー
============================== */
.nav-bar {
    background-color: #f9f9f9; 
    /* ナビバーの背景色を白寄りの薄いグレーに設定 */
    display: flex; 
    /* フレックスボックスでナビゲーション項目を横並びに */
    justify-content: center; 
    /* 要素を中央寄せ */
    gap: 20%; 
    /* ナビゲーション項目同士の間隔を20%（親要素幅に対して）空ける */
    width: 100%; 
    /* 横幅いっぱい */
    margin-top: 10px; 
    /* 上方向に10pxの余白を設ける */
    padding-top: 10px; 
    /* ナビゲーションバーの上側パディングを追加 */
}

/* ==============================
   「スケジュール表示」リンクのスタイル
============================== */
.schedule {
    text-decoration: underline; 
    /* テキストに下線を付与 */
    font-size: 20px; 
    /* 文字サイズを20pxに設定 */
    color: #0307ff; 
    /* 濃い青色を指定 */
    padding: 5px 10px; 
    /* リンクの内側に余白を付ける */
    border-radius: 5px; 
    /* 角を5px丸くする */
}

/* ホバー時の色変更 */
.schedule:hover {
    color: #000; 
    /* マウスオーバー時に黒字にする */
}

/* ==============================
   「ログイン・ユーザ登録」リンクのスタイル
============================== */
.login {
    text-decoration: none; 
    /* 下線を外す */
    font-size: 20px; 
    /* 文字サイズを20pxに設定 */
    color: #000; 
    /* 文字色を黒に設定 */
    padding: 5px 10px; 
    /* 内側に余白をつける */
    border-radius: 5px; 
    /* 角を5px丸くする */
    border: 2px solid #000; 
    /* 黒い2pxのボーダーを追加 */
}

/* ホバー時の背景色等の変更 */
.login:hover {
    background-color: #ccc; 
    /* 背景色をライトグレーにする */
    color: #fff; 
    /* テキスト色を白にする */
}

/* ==============================
   .loginリンクテキストの前にアイコンを追加
============================== */
.login::before {
    content: '👤'; 
    /* ユーザーアイコンとして人型の絵文字を表示 */
    font-size: 20px; 
    /* アイコンのサイズ */
    margin-left: 5px; 
    /* アイコンとテキストの間にスペースを確保 */
    display: inline-block; 
    /* 横並びに表示するためにインラインブロック化 */
}

/* ==============================
   モーダル（画面を覆う要素）の基本スタイル
============================== */
.modal {
    display: none; 
    /* 初期状態では非表示 */
    position: fixed; 
    /* 画面全体に固定する（スクロールしても位置が変わらない） */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5); 
    /* 半透明の黒背景を敷いて下を見えにくくする */
    justify-content: center; 
    /* コンテナ内のアイテムを水平方向に中央寄せ */
    align-items: center; 
    /* コンテナ内のアイテムを垂直方向に中央寄せ */
    z-index: 1000; 
    /* 他の要素より前面に表示 */
}

/* モーダル内のコンテンツ領域 */
.modal-content {
    background-color: #fff; 
    /* コンテンツの背景を白にする */
    padding: 20px; 
    /* 内側に20pxの余白を設ける */
    border-radius: 5px; 
    /* 角を5px丸く */
    width: 300px; 
    /* コンテンツの横幅を300pxに設定 */
    text-align: center; 
    /* テキストを中央にそろえる */
}

.modal-content h2 {
    margin-bottom: 20px; 
    /* タイトルの下に20pxの余白を追加 */
}

.modal-content input {
    width: 90%; 
    /* テキストボックスを横幅の90%に拡張 */
    margin-bottom: 15px; 
    /* 下方向に15pxの余白 */
    padding: 10px; 
    /* ボックス内側に10pxの余白 */
    border: 1px solid #ccc; 
    /* 薄いグレーの境界線を付ける */
    border-radius: 5px; 
    /* 角を5px丸くする */
}

.modal-content button {
    width: 90%; 
    /* ボタンを横幅の90%に広げる */
    padding: 10px; 
    /* 上下に10pxの余白 */
    background-color: #007BFF; 
    /* ボタンの背景色（青系） */
    color: white; 
    /* テキストを白色に */
    border: none; 
    /* ボーダーを外す */
    border-radius: 5px; 
    /* ボタンの角を5px丸くする */
    cursor: pointer; 
    /* マウスオーバー時にカーソルを手型に */
}

.modal-content button:hover {
    background-color: #0056b3; 
    /* ボタンの背景色を濃い青系に変化 */
}

p {
    font-size: 15px !important; 
    /* p要素のフォントサイズを強制的に15pxに設定 */
}

/* ==============================
   モーダルの右上に表示される×（閉じるボタン）
============================== */
.close-btn {
    color: #aaa; 
    /* ボタンの色を薄いグレーに */
    float: right; 
    /* モーダル内の右上に配置 */
    font-size: 20px; 
    /* 文字サイズを20pxに */
    font-weight: bold; 
    /* 太字 */
}
.close-btn:hover {
    color: black; 
    /* ホバー時に黒色に変化 */
    text-decoration: none; 
    /* テキストの装飾はしない */
    cursor: pointer; 
    /* 手型のカーソルを表示 */
}

/* ==============================
   パスワード入力用コンテナ (パスワード表示切り替えアイコン付き)
============================== */
.password-container {
    width: 95%; 
    /* 横幅を95%に拡張 */
    padding: 5px; 
    /* 内側に5pxの余白 */
    margin-bottom: 15px; 
    /* 下に15pxの余白 */
    display: flex; 
    /* テキストボックスとアイコンを横並びに */
    align-items: center; 
    /* 縦方向の中央揃え */
    justify-content: space-between; 
    /* テキストボックスとアイコンを左右に分布 */
}

.password-container input {
    width: 100%; 
    /* 残りの横幅をいっぱいに使う */
    flex-grow: 1; 
    /* 要素が余分なスペースを占有できるようにする */
    margin-bottom: 0; 
    /* margin-bottomを打ち消し */
    padding: 10px; 
    /* 内側余白 */
    border-radius: 5px; 
    /* 角を丸く */
}

.toggle-password {
    width: 10%; 
    /* アイコンの幅を適度に確保 */
    margin-left: 10px; 
    /* 入力欄との間にスペースを作る */
    font-size: 20px; 
    /* アイコンのフォントサイズ */
    cursor: pointer; 
    /* マウスオーバーで手型に */
}

/* ==============================
   旅行情報入力フォーム全体のコンテナ
============================== */
.travel-form {
    max-width: 600px; 
    /* フォーム全体の最大幅を600pxに制限 */
    margin: 0 auto; 
    /* 左右の自動マージンで中央寄せ */
    background-color: #ffe4b5; 
    /* フォームの背景色をライトベージュに設定 */
    padding: 20px; 
    /* 内側に20px余白 */
    border-radius: 10px; 
    /* 角を10px丸く */
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1); 
    /* 薄いシャドウを付けて立体感を演出 */
}

/* ==============================
   フォーム内部のコンテナ
============================== */
.container {
    max-width: 500px; 
    /* コンテンツ部分の最大幅を500pxに制限 */
    margin: 0 auto; 
    /* 中央寄せ */
    background-color: #fff; 
    /* 背景色を白に */
    padding: 20px; 
    /* 内側余白を20px */
    border-radius: 10px; 
    /* 角を10px丸く */
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1); 
    /* 薄いシャドウを付与 */
}

/* ==============================
   見出し（タイトル）
============================== */
h1 {
    font-size: 30px; 
    /* 大きめの文字サイズ */
    text-align: center; 
    /* タイトルを中央に寄せる */
    color: #333; 
    /* ダークグレーの文字色 */
}

/* ==============================
   ラベル共通スタイル
============================== */
label {
    color: #000; 
    /* ラベルの文字色を黒に */
    font-size: 20px; 
    /* 大きめのフォントサイズ */
    display: block; 
    /* ブロック要素化して改行させる */
    font-weight: bold; 
    /* 太字に */
    margin-bottom: 5px; 
    /* 下方向に5pxの余白 */
}

/* チェックボックス系のラベルを少し小さく */
label.checkbox {
    color: #000;
    font-size: 15px; 
    display: block;
    margin-bottom: 5px;
}

/* ==============================
   アコーディオン用のリスト
============================== */
ul {
    background-color: white; 
    /* 背景を白に */
    color: black; 
    /* 文字色を黒に */
    cursor: pointer; 
    /* マウスオーバー時は手型に */
    padding: 10px; 
    /* 内側に10px */
    text-align: left; 
    /* テキストは左寄せ */
    border: 1px solid #ccc; 
    /* 薄いグレーの境界線 */
    outline: none; 
    /* フォーカス時のアウトラインを消去 */
    font-size: 16px; 
    /* 文字サイズ */
    border-radius: 5px; 
    /* 角を丸く */
    margin-bottom: 5px; 
    /* 下方向に5px余白 */
}

/* アコーディオンのリストアイテム */
li {
    display: flex; 
    /* アイコンとテキストを横並び */
    justify-content: space-between; 
    /* 左右に要素を振り分け */
    align-items: center; 
    /* 垂直方向を中央に */
    list-style: none; 
    /* デフォルトのリストマーカーを消去 */
}

/* ==============================
   リストアイテム内に矢印を表示
============================== */
li::after {
    color: #000; 
    /* 矢印の色を黒に */
    content: '▼'; 
    /* 下向き矢印を表示 */
    font-size: 20px; 
    /* 矢印の大きさ */
    margin-left: 5px; 
    /* アイコンとテキストの間に余白を入れる */
    display: inline-block; 
    transition: transform 0.2s; 
    /* 回転アニメーションを0.2秒で設定 */
}

/* アコーディオンが開いている状態で矢印を回転 */
li.open::after {
    transform: rotate(180deg); 
}

/* アコーディオン全体 */
.accordion {
    margin-bottom: 20px; 
    /* 下方向に20pxの余白 */
}

/* アコーディオンの各リストボタン */
.accordion-list {
    width: 95%; 
    /* 親要素幅の95%に */
    background-color: white; 
    color: #7b7b7b; 
    /* やや淡い文字色に */
    cursor: pointer; 
    /* ポインタを表示 */
    padding: 10px; 
    text-align: left;
    border: 1px solid #ccc;
    outline: none;
    font-size: 16px; 
    border-radius: 5px;
    margin-bottom: 5px; 
}

/* ==============================
   こだわり入力テキストエリア
============================== */
#preferences {
    width: 95%; 
    /* 横幅を95%に */
    padding: 10px; 
    margin-bottom: 20px; 
    border: 1px solid #ccc; 
    border-radius: 5px; 
    height: 100px; 
    /* 高さを100pxに */
    resize: vertical; 
    /* ユーザーがテキストエリアを縦方向のみリサイズ可能に */
}

/* アコーディオン内の詳細情報部分（展開時に表示されるパネル） */
.panel {
    padding: 10px 10px 10px 10px; 
    /* 上下左右に10pxの余白 */
    display: none; 
    /* 初期状態は非表示 */
    overflow: hidden; 
    /* コンテンツがはみ出したら隠す */
    background-color: #fff; 
    /* 背景色を白に */
    border-radius: 5px; 
}

/* ==============================
   郵便番号自動補完のスタイル
   (yubinbango/h-adr)
============================== */
.h-adr span {
    font-size: 15px;
    color:#000;
    font-weight:15 !important; 
    /* font-weightに数値指定は本来推奨されないが、!importantで強制 */
}

.h-adr table {
    margin-bottom: 10px;
}

.h-adr input {
    padding: 3px;
}

/* ==============================
   旅行先入力セクションで使用するクラス？
============================== */
.destination-header {
    width: 100%;
    display: inline;
    transform: rotate(180deg);
}
.destination-header::after {
    transform: rotate(90deg);
}
.destination-allCheckbox {
    display: inline;
}
#destination-list {
    margin-bottom:0;
    color: #000;
    font-size: 20px;
}
#checkbox-area {
    display: inline;
    width: 100%;
    color: #000;
    font-size: 15px;
    font-weight:100;
    padding: 3px;
    margin: 5px 5px 5px 0;
    border: 1px solid #ccc;
    border-radius: 5px;
}

/* ==============================
   カウンターグループ（人数カウンター、予算カウンター等）
============================== */
.counter-group {
    display: flex; 
    /* フレックスボックスでカウンターを配置 */
    flex-direction: column; 
    /* 縦に並べる */
    margin-top: 10px; 
    /* 上に10pxの余白を設ける */
}

/* 各カウンターの共通スタイル */
.counter {
    display: flex; 
    justify-content: space-between; 
    align-items: center; 
    margin-bottom: 10px; 
    /* 下に10pxの余白 */
}

/* カウンター内のラベル */
.counter label {
    font-size:15px;
    width: 100px; 
    /* ラベルの固定幅を指定 */
}

/* カウンターで使用する +/- ボタン */
.counter button {
    width: 30px; 
    height: 30px; 
    background-color: #f0a890; 
    /* 薄いピンク系の背景色 */
    color: white; 
    /* テキストを白に */
    border: none; 
    font-size: 18px; 
    cursor: pointer; 
    border-radius: 5px; 
}

/* カウンターの数値を表示するinput要素 */
.counter input {
    width: 80px; 
    /* 入力欄の幅 */
    text-align: center; 
    /* テキストを中央寄せ */
    font-size: 16px; 
    border: 1px solid #ccc; 
    border-radius: 5px; 
    padding: 5px;
}

/* ==============================
   カレンダー表示用コンテナ
============================== */
#calendar-container {
    display: block; 
    width: 100%; 
    max-width: 100%; 
    overflow: hidden;
    box-sizing: border-box; 
}

/* Flatpickr用のカスタマイズ */
.flatpickr-innerContainer {
    width: 100%;
    height: 100%;
    font-size: 0.7rem; 
    /* カレンダー全体の文字サイズ */
    justify-content: center; 
}

.flatpickr-calendar {
    width: 100% !important;
    max-width: 100% !important;
    height: auto !important;
    box-sizing: border-box !important;
    overflow: hidden !important;
}

.flatpickr-wrapper {
    width: 100% !important;
    max-width: 100% !important;
    overflow: hidden !important;
    height: auto !important;
}

.flatpickr-day {
    font-size: 1.5rem; 
    /* 日付の数字を大きめに */
    text-align: center;
    width: auto;
    height: auto;
}

.flatpickr-weekdays {
    font-size: 1.5rem;
    text-align: center;
    width: auto;
    height: auto;
}

/* 日付セルホバー時 */
.flatpickr-day:hover {
    cursor: pointer;
    outline: 0;
    background: #ffbcfb !important; 
    /* 薄いピンク系の背景色に */
    border-color: #ffbcfb !important;
}

/* 選択された日付 */
.flatpickr-day.selected {
    border-color: #90e8ee;
    background-color: #90e8ee !important; 
    /* ライトブルー系 */
    color: #fff; 
    /* 白文字 */
}

/* 範囲選択の開始日・終了日 */
.flatpickr-day.startRange,
.flatpickr-day.endRange {
    border-color: #90e8ee !important;
    background-color: #90e8ee !important;
    color: #fff; 
}
.flatpickr-day.startRange {
    box-shadow: 0 0 0 #90e8ee, 5px 0 0 #90e8ee !important;
}
.flatpickr-day.endRange {
    box-shadow: 0 0 0 #90e8ee, 0 0 0 #90e8ee !important;
}

/* 範囲内の日付 */
.flatpickr-day.inRange {
    padding: 0;
    margin: 0;
    background-color: #FFFACD !important; 
    /* ライトイエロー */
    color: #000;
    border-color: #FFFACD !important;
    box-shadow: -5px 0 0 #FFFACD, 5px 0 0 #FFFACD !important;
}

/* 今日の日付 */
.flatpickr-day.today {
    border-color: #007BFF !important;
}

/* 日曜日を赤文字に、土曜日を青文字に */
.flatpickr-calendar .flatpickr-innerContainer .flatpickr-weekdays .flatpickr-weekday:nth-child(7n + 1),
.flatpickr-calendar .flatpickr-innerContainer .flatpickr-days .flatpickr-day:not(.flatpickr-disabled):not(.prevMonthDay):not(.nextMonthDay):nth-child(7n + 1) {
    color: red;
}
.flatpickr-calendar .flatpickr-innerContainer .flatpickr-weekdays .flatpickr-weekday:nth-child(7),
.flatpickr-calendar .flatpickr-innerContainer .flatpickr-days .flatpickr-day:not(.flatpickr-disabled):not(.prevMonthDay):not(.nextMonthDay):nth-child(7n) {
    color: blue;
}

/* ==============================
   「プラン作成」ボタンのコンテナ
============================== */
.button-container {
    display: flex; 
    /* ボタンをフレックスボックスで配置 */
    justify-content: center; 
    align-items: center;
    width: 100%; 
    /* 横幅いっぱい */
}

/* ==============================
   「プラン作成」ボタンのスタイル
============================== */
.plan-button {
    width: 60%; 
    /* 親要素幅の60%をボタン幅に */
    max-width: 50%; 
    /* ただし最大幅は50%に制限 */
    background-color: #ff6b1c; 
    /* オレンジ系の背景色 */
    color: white; 
    font-size: 30px; 
    /* 大きめの文字サイズ */
    font-weight: bold; 
    padding: 15px 40px; 
    margin: 20px; 
    border: 5px solid #ff904b; 
    /* やや明るめのオレンジで太めのボーダー */
    border-radius: 40px; 
    /* 角を大きく丸めて円に近い形状に */
    cursor: pointer;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: background-color 0.3s ease; 
    /* 背景色変化を0.3秒かけてアニメーション */
}

/* ホバー時の色変更 */
.plan-button:hover {
    background-color: #ff934b;
    border: 5px solid #ffa36f; 
}

/* クリック時の色やシャドウ変更 */
.plan-button:active {
    border: 5px solid #ff6b1c;
    background-color: #f8965e; 
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

/* ==============================
   メディアクエリ
   max-width: 480px（スマホ等の小さな画面用）
============================== */
@media screen and (max-width: 480px) {
    html {
        font-size: 4vw; 
        /* 画面幅に応じてさらに大きく可変させる */
    }

    body {
        margin: 0;
        padding: 0; 
        font-size: 1rem; 
    }

    .nav-bar {
        align-items: center; 
        margin-top: 5px; 
        gap: 10%;
    }

    .schedule {
        font-size: 1rem; 
        padding: 5px 8px;
    }

    .login {
        font-size: 0.9rem;
        padding: 5px 8px;
    }

    .travel-form,
    .container {
        max-width: 90%; 
        /* 画面幅に合わせて狭める */
        padding: 15px; 
    }

    h1 {
        font-size: 1.5rem;
    }

    label {
        font-size: 1rem;
    }

    .budget_1 input,
    select,
    textarea {
        width: 95%;
        font-size: 1rem;
    }

    ul {
        font-size: 1rem;
        padding: 8px;
    }

    li {
        font-size: 1rem;
        padding: 8px;
        list-style: none;
    }

    .accordion-list {
        width: 95%;
        padding: 8px;
    }

    .panel {
        padding: 0;
        width: 100%;
        font-size: 1rem;
    }

    #checkbox-area {
        font-size: 0.8rem;
    }

    .counter-group {
        margin-top: 8px;
    }

    .counter {
        font-size: 1rem;
    }

    .counter button {
        width: 28px;
        height: 28px;
        font-size: 16px;
        display: flex; 
        align-items: center; 
        justify-content: center;
    }

    .counter input {
        width: 80px;
        font-size: 1rem;
    }

    #calendar-container {
        display: block;
        width: 100%;
        max-width: 100%;
        overflow: hidden;
        box-sizing: border-box;
    }

    .flatpickr-innerContainer {
        width: 100%;
        height: 100%;
        font-size: 0.7rem;
        justify-content: center;
    }

    .flatpickr-calendar {
        width: 100% !important;
        max-width: 100% !important;
        height: auto !important;
        box-sizing: border-box !important;
        overflow: hidden !important;
    }

    .flatpickr-wrapper {
        width: 100% !important;
        max-width: 100% !important;
        overflow: hidden !important;
        height: auto !important;
    }

    .flatpickr-days {
        padding: 5px;
        text-align: center;
        width: auto;
        height: 100%;
    }

    .flatpickr-day {
        font-size: 1rem;
        text-align: center;
        width: auto;
        height: auto;
    }

    .flatpickr-weekdays {
        font-size: 1.5rem;
        text-align: center;
        width: auto;
        height: auto;
    }

    .plan-button {
        font-size: 25px;
        width: 60%;
        max-width: 60%;
    }
}

/* ==============================
   PC画面用スタイル (769px以上)
============================== */
@media screen and (min-width: 769px) {
    #loading-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(255, 255, 255, 0.8);
      z-index: 9999;
      display: none; 
      /* 初期状態で非表示（必要に応じてJSで表示） */
    }
  
    .spinner {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      border: 8px solid #f3f3f3;
      border-top: 8px solid #3498db;
      border-radius: 50%;
      width: 50px;
      height: 50px;
      animation: spin 1s linear infinite;
    }
  
    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }
}

/* ==============================
   スマートフォン用のスタイル (max-width: 768px)
============================== */
@media screen and (max-width: 768px) {
    #loading-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(255, 255, 255, 0.9);
      z-index: 9999;
      display: none;
    }
  
    .spinner {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      border: 6px solid #f3f3f3;
      border-top: 6px solid #3498db;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      animation: spin 1s linear infinite;
    }
}
