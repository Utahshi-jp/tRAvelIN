services:
  node-server:
    build:
      context: ./src/node-server
    networks:
      - backend
    expose:
      - "3000"
    environment:
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy

  python-server:
    build:
      context: ./src/python-server
    networks:
      - backend
    expose:
      - "5000"
    environment:
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    depends_on:
      - mysql
      - node-server

  mysql:
    image: mysql:8.0
    networks:
      - backend
    expose:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    volumes:
      - ./.data/mysql:/var/lib/mysql
      - ./config/seed.sql:/docker-entrypoint-initdb.d/seed.sql:ro
      - ./config/workaround-authentication.cnf:/etc/mysql/conf.d/wa-auth.cnf:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    ports:
      - "3333:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - mysql
      - node-server
      - python-server

networks:
  backend:
    driver: bridge
